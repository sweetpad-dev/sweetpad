{
  "name": "sweetpad",
  "type": "commonjs",
  "displayName": "SweetPad (iOS/Swift development)",
  "description": "Develop Swift/iOS projects in VS Code",
  "version": "0.1.65",
  "publisher": "sweetpad",
  "icon": "images/logo.png",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/sweetpad-dev/sweetpad.git"
  },
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Formatters",
    "Linters",
    "Extension Packs",
    "Programming Languages",
    "Other"
  ],
  "activationEvents": [
    "onCommand:workbench.action.tasks.runTask",
    "workspaceContains:**/*.xcworkspace",
    "workspaceContains:**/*.xcodeproj",
    "workspaceContains:**/project.yml",
    "workspaceContains:**/Podfile",
    "onLanguage:swift",
    "onDebug"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "taskDefinitions": [
      {
        "type": "sweetpad",
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "launch",
              "debug",
              "build",
              "run",
              "clean",
              "test",
              "resolve-dependencies"
            ]
          },
          "scheme": {
            "type": "string",
            "description": "Scheme to build",
            "examples": [
              "MyApp",
              "MyAppTests"
            ]
          },
          "configuration": {
            "type": "string",
            "description": "Configuration to build",
            "examples": [
              "Debug",
              "Release"
            ]
          },
          "workspace": {
            "type": "string",
            "description": "Path to workspace for resolving dependencies",
            "examples": [
              "./MyApp.xcworkspace",
              "/Users/user/Developer/MyApp/MyApp.xcworkspace"
            ]
          },
          "simulator": {
            "type": "string",
            "description": "Simulator to launch. Currently only device UUID is supported. Deprecated: use `destinationId` instead",
            "examples": [
              "00000000-0000-0000-0000-000000000000"
            ]
          },
          "destinationId": {
            "type": "string",
            "description": "Device ID to launch the app on",
            "examples": [
              "00000000-0000-0000-0000-000000000000"
            ]
          },
          "destination": {
            "type": "string",
            "description": "Raw destination string to launch the app on. Alternative to `destinationId`",
            "examples": [
              "platform=iOS Simulator,name=iPhone 12,OS=15.0",
              "generic/platform=iOS Simulator",
              "platform=iOS Simulator,id=00000000-0000-0000-0000-000000000000"
            ]
          },
          "launchArgs": {
            "type": "array",
            "description": "Arguments to pass to the app on launch",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "--my-arg",
                "value"
              ]
            ]
          },
          "launchEnv": {
            "type": "object",
            "description": "Environment variables to pass to the app on launch",
            "examples": [
              {
                "MY_ENV": "value"
              }
            ]
          }
        }
      }
    ],
    "problemMatchers": [
      {
        "name": "sweetpad-watch",
        "label": "SweetPad (watch)",
        "owner": "sweetpad",
        "fileLocation": [
          "relative",
          "${workspaceRoot}"
        ],
        "applyTo": "allDocuments",
        "pattern": {
          "regexp": "",
          "line": 1
        },
        "background": {
          "activeOnStart": true,
          "beginsPattern": "^🍭 SweetPad: watch marker",
          "endsPattern": "^🍩 SweetPad: watch marker"
        }
      },
      {
        "name": "sweetpad-xcodebuild-default",
        "owner": "sweetpad",
        "label": "SweetPad xcodebuild (default)",
        "fileLocation": [
          "absolute"
        ],
        "pattern": [
          {
            "regexp": "^(.*):(\\d+):(\\d+):\\s+(error|warning):\\s+(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "severity": 4,
            "message": 5
          }
        ]
      },
      {
        "name": "sweetpad-xcbeautify-errors",
        "owner": "sweetpad",
        "label": "SweetPad xcbeautify (errors)",
        "fileLocation": [
          "absolute"
        ],
        "pattern": {
          "regexp": "^(?:❌|\\[x\\])\\s*(\\/[^:]+):(\\d+):(\\d+):\\s*(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 4
        },
        "severity": "error"
      },
      {
        "name": "sweetpad-xcbeautify-warnings",
        "owner": "sweetpad",
        "fileLocation": [
          "absolute"
        ],
        "pattern": {
          "regexp": "^(?:⚠️|\\[!\\])\\s*(\\/[^:]+):(\\d+):(\\d+):\\s*(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 4
        },
        "severity": "warning"
      }
    ],
    "debuggers": [
      {
        "type": "sweetpad-lldb",
        "label": "SweetPad (LLDB)",
        "configurationSnippets": [
          {
            "label": "Sweetpad: Build and Run (Wait for debugger)",
            "body": {
              "type": "sweetpad-lldb",
              "request": "attach",
              "name": "Sweetpad: Build and Run (Wait for debugger)",
              "preLaunchTask": "sweetpad: debug"
            }
          }
        ],
        "configurationAttributes": {
          "attach": {
            "description": "Attach to running app",
            "required": [],
            "type": "object",
            "properties": {
              "codelldbAttributes": {
                "title": "CodeLLDB attributes",
                "description": "Attributes to pass to CodeLLDB. See: https://github.com/vadimcn/codelldb/blob/v1.10.0/MANUAL.md",
                "type": "object",
                "examples": [
                  {
                    "initCommands": [
                      "script print('Hello, SweetPad!')"
                    ]
                  }
                ]
              },
              "continueOnAttach": {
                "type": "boolean",
                "default": true,
                "description": "Continue the app after attaching. If false, the app will be paused after attaching."
              }
            }
          },
          "launch": {
            "description": "Deprecated: use `attach` instead",
            "required": [],
            "type": "object",
            "properties": {
              "codelldbAttributes": {
                "title": "CodeLLDB attributes",
                "description": "Attributes to pass to CodeLLDB. See: https://github.com/vadimcn/codelldb/blob/v1.10.0/MANUAL.md",
                "type": "object",
                "examples": [
                  {
                    "initCommands": [
                      "script print('Hello, SweetPad!')"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "speedpad-view",
          "title": "SweetPad",
          "icon": "images/logo-panel.png",
          "when": "sweetpad.enabled"
        }
      ]
    },
    "views": {
      "speedpad-view": [
        {
          "id": "sweetpad.build.view",
          "name": "Build",
          "visibility": "visible"
        },
        {
          "id": "sweetpad.destinations.view",
          "name": "Destinations",
          "visibility": "collapsed"
        },
        {
          "id": "sweetpad.tools.view",
          "name": "Tools",
          "visibility": "collapsed"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "sweetpad.build.view",
        "contents": "No Xcode scheme was found. Select the workspace that has the Xcode project to use SweetPad.\n[Select Workspace](command:sweetpad.build.selectXcodeWorkspace)\nAlso you can run diagnose to try to detect the root of the problem\n[Run diagnose](command:sweetpad.build.diagnoseSetup)",
        "when": "sweetpad.build.noSchemes"
      },
      {
        "view": "sweetpad.devices.view",
        "contents": "No devicectl found. Install the latest version of Xcode to manage device.",
        "when": "sweetpad.devices.noDevicectl"
      },
      {
        "view": "sweetpad.devices.view",
        "contents": "No devices found. Use Xcode to pair a device:\nProduct -> Destination -> Manage Run destination.\n[Open Xcode](command:sweetpad.build.openXcode)",
        "when": "sweetpad.devices.noDevices"
      }
    ],
    "commands": [
      {
        "command": "sweetpad.format.run",
        "title": "SweetPad: Format",
        "icon": "$(code)"
      },
      {
        "command": "sweetpad.format.showLogs",
        "title": "SweetPad: Show format logs",
        "icon": "$(list-tree)"
      },
      {
        "command": "sweetpad.build.launch",
        "title": "SweetPad: Build & Run (Launch)",
        "icon": "$(sweetpad-player-play)"
      },
      {
        "command": "sweetpad.build.debug",
        "title": "SweetPad: Build & Run (Debug)",
        "icon": "$(bug)"
      },
      {
        "command": "sweetpad.build.run",
        "title": "SweetPad: Run (without Build)",
        "icon": "$(play)"
      },
      {
        "command": "sweetpad.build.build",
        "title": "SweetPad: Build (without Run)",
        "icon": "$(sweetpad-tool)"
      },
      {
        "command": "sweetpad.build.clean",
        "title": "SweetPad: Clean",
        "icon": "$(clear-all)"
      },
      {
        "command": "sweetpad.build.test",
        "title": "SweetPad: Test",
        "icon": "$(beaker)"
      },
      {
        "command": "sweetpad.build.resolveDependencies",
        "title": "SweetPad: Resolve dependencies",
        "icon": "$(sync)"
      },
      {
        "command": "sweetpad.build.removeBundleDir",
        "title": "SweetPad: Remove bundle directory",
        "icon": "$(sweetpad-trash-x)"
      },
      {
        "command": "sweetpad.build.genereateBuildServerConfig",
        "title": "SweetPad: Generate Build Server Config (buildServer.json)",
        "icon": "$(file-code)"
      },
      {
        "command": "sweetpad.build.selectXcodeWorkspace",
        "title": "SweetPad: Select Xcode workspace",
        "icon": "$(file-directory)"
      },
      {
        "command": "sweetpad.build.selectConfiguration",
        "title": "SweetPad: Select build configuration",
        "icon": "$(file-directory)"
      },
      {
        "command": "sweetpad.build.setDefaultScheme",
        "title": "SweetPad: Set scheme",
        "icon": "$(file-directory)"
      },
      {
        "command": "sweetpad.build.diagnoseSetup",
        "title": "SweetPad: Diagnose build setup",
        "icon": "$(bug)"
      },
      {
        "command": "sweetpad.testing.selectTarget",
        "title": "SweetPad.Testing: Select testing target",
        "icon": "$(file-code)"
      },
      {
        "command": "sweetpad.testing.buildForTesting",
        "title": "SweetPad.Testing: Build for testing (without running tests)",
        "icon": "$(file-code)"
      },
      {
        "command": "sweetpad.testing.testWithoutBuilding",
        "title": "SweetPad.Testing: Test without building",
        "icon": "$(repo-sync)"
      },
      {
        "command": "sweetpad.testing.setDefaultScheme",
        "title": "SweetPad.Testing: Set scheme for testing",
        "icon": "$(file-code)"
      },
      {
        "command": "sweetpad.testing.selectConfiguration",
        "title": "SweetPad.Testing: Select configuration for testing",
        "icon": "$(file-directory)"
      },
      {
        "command": "sweetpad.xcodegen.generate",
        "title": "SweetPad: Generate an Xcode project using XcodeGen",
        "icon": "$(file-code)"
      },
      {
        "command": "sweetpad.tuist.generate",
        "title": "SweetPad: Generate an Xcode project using Tuist",
        "icon": "$(file-code)"
      },
      {
        "command": "sweetpad.tuist.install",
        "title": "SweetPad: Install Swift Package using Tuist",
        "icon": "$(file-code)"
      },
      {
        "command": "sweetpad.tuist.clean",
        "title": "SweetPad: Clean Tuist project",
        "icon": "$(file-code)"
      },
      {
        "command": "sweetpad.tuist.edit",
        "title": "SweetPad: Edit Tuist project (Open project in Xcode)",
        "icon": "$(file-code)"
      },
      {
        "command": "sweetpad.build.openXcode",
        "title": "SweetPad: Open Xcode",
        "icon": "$(sweetpad-tools)"
      },
      {
        "command": "sweetpad.build.refreshView",
        "title": "SweetPad: Refresh view",
        "icon": "$(sweetpad-refresh)"
      },
      {
        "command": "sweetpad.simulators.refresh",
        "title": "SweetPad: Refresh simulators list",
        "icon": "$(sweetpad-refresh)"
      },
      {
        "command": "sweetpad.simulators.openSimulator",
        "title": "SweetPad: Open simulator",
        "icon": "$(sweetpad-device-mobile-heart)"
      },
      {
        "command": "sweetpad.simulators.removeCache",
        "title": "SweetPad: Remove simulator cache",
        "icon": "$(sweetpad-trash-x)"
      },
      {
        "command": "sweetpad.simulators.start",
        "title": "SweetPad: Start simulator",
        "icon": "$(debug-start)"
      },
      {
        "command": "sweetpad.simulators.stop",
        "title": "SweetPad: Stop simulator",
        "icon": "$(debug-stop)"
      },
      {
        "command": "sweetpad.devices.refresh",
        "title": "SweetPad: Refresh devices list",
        "icon": "$(sweetpad-refresh)"
      },
      {
        "command": "sweetpad.tools.install",
        "title": "SweetPad: Install tool",
        "icon": "$(sweetpad-terminal-2)"
      },
      {
        "command": "sweetpad.tools.documentation",
        "title": "SweetPad: Open tool documentation",
        "icon": "$(sweetpad-book)"
      },
      {
        "command": "sweetpad.tools.refresh",
        "title": "SweetPad: Refresh tools list",
        "icon": "$(sweetpad-refresh)",
        "enablement": "view == sweetpad.tools.view"
      },
      {
        "command": "sweetpad.system.resetSweetpadCache",
        "title": "SweetPad: Reset Extension Cache",
        "icon": "$(clear-all)"
      },
      {
        "command": "sweetpad.system.testErrorReporting",
        "title": "SweetPad: Test Error Reporting",
        "icon": "$(bug)"
      },
      {
        "command": "sweetpad.system.createIssue.generic",
        "title": "SweetPad: Create Issue on GitHub",
        "icon": "$(bug)"
      },
      {
        "command": "sweetpad.system.createIssue.noSchemes",
        "title": "SweetPad: Create Issue on GitHub (No Schemes)",
        "icon": "$(bug)"
      },
      {
        "command": "sweetpad.debugger.getAppPath",
        "title": "SweetPad: Get app path for debugging",
        "icon": "$(file-code)"
      },
      {
        "command": "sweetpad.destinations.select",
        "title": "SweetPad: Select destination",
        "icon": "$(sweetpad-pin)"
      },
      {
        "command": "sweetpad.destinations.removeRecent",
        "title": "SweetPad: Remove recent destination",
        "icon": "$(sweetpad-trash-x)"
      },
      {
        "command": "sweetpad.destinations.selectForTesting",
        "title": "SweetPad.Testing: Select destination for testing",
        "icon": "$(file-code)"
      }
    ],
    "menus": {
      "commandPalette": [],
      "view/title": [
        {
          "command": "sweetpad.build.openXcode",
          "when": "view == sweetpad.build.view",
          "group": "navigation@3"
        },
        {
          "command": "sweetpad.build.removeBundleDir",
          "when": "view == sweetpad.build.view",
          "group": "navigation@1"
        },
        {
          "command": "sweetpad.tools.refresh",
          "when": "view == sweetpad.tools.view",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "sweetpad.simulators.openSimulator",
          "when": "view == sweetpad.destinations.view && viewItem =~ /destination-group-simulator-.*/",
          "group": "inline@3"
        },
        {
          "command": "sweetpad.simulators.refresh",
          "when": "view == sweetpad.destinations.view && viewItem =~ /destination-group-simulator-.*/",
          "group": "inline@2"
        },
        {
          "command": "sweetpad.simulators.removeCache",
          "when": "view == sweetpad.destinations.view && viewItem =~ /destination-group-simulator-.*/",
          "group": "inline@1"
        },
        {
          "command": "sweetpad.devices.refresh",
          "when": "view == sweetpad.destinations.view && viewItem =~ /destination-group-device-.*/",
          "group": "inline@1"
        },
        {
          "command": "sweetpad.build.debug",
          "when": "view == sweetpad.build.view",
          "group": "inline@3"
        },
        {
          "command": "sweetpad.build.launch",
          "when": "view == sweetpad.build.view",
          "group": "inline@2"
        },
        {
          "command": "sweetpad.build.build",
          "when": "view == sweetpad.build.view",
          "group": "inline@1"
        },
        {
          "command": "sweetpad.build.debug",
          "when": "view == sweetpad.build.view",
          "group": "context@1"
        },
        {
          "command": "sweetpad.build.launch",
          "when": "view == sweetpad.build.view",
          "group": "context@2"
        },
        {
          "command": "sweetpad.build.build",
          "when": "view == sweetpad.build.view",
          "group": "context@3"
        },
        {
          "command": "sweetpad.build.run",
          "when": "view == sweetpad.build.view",
          "group": "context@4"
        },
        {
          "command": "sweetpad.build.test",
          "when": "view == sweetpad.build.view",
          "group": "context@5"
        },
        {
          "command": "sweetpad.build.clean",
          "when": "view == sweetpad.build.view",
          "group": "context@6"
        },
        {
          "command": "sweetpad.build.resolveDependencies",
          "when": "view == sweetpad.build.view",
          "group": "context@7"
        },
        {
          "command": "sweetpad.build.setDefaultScheme",
          "when": "view == sweetpad.build.view",
          "group": "context@8"
        },
        {
          "command": "sweetpad.build.genereateBuildServerConfig",
          "when": "view == sweetpad.build.view",
          "group": "context@9"
        },
        {
          "command": "sweetpad.simulators.start",
          "when": "view == sweetpad.destinations.view && viewItem =~ /destination-item-simulator.*&status=shutdown.*/",
          "group": "inline@2"
        },
        {
          "command": "sweetpad.simulators.stop",
          "when": "view == sweetpad.destinations.view && viewItem =~ /destination-item-simulator.*&status=booted.*/",
          "group": "inline@2"
        },
        {
          "command": "sweetpad.destinations.select",
          "when": "view == sweetpad.destinations.view && viewItem =~ /destination-item-.*/",
          "group": "inline@1"
        },
        {
          "command": "sweetpad.destinations.select",
          "when": "view == sweetpad.destinations.view && viewItem =~ /destination-item-.*/",
          "group": "context@1"
        },
        {
          "command": "sweetpad.destinations.removeRecent",
          "when": "view == sweetpad.destinations.view && viewItem =~ /destination-item-.*/ && viewItem =~ /.*recent=true.*/",
          "group": "context@2"
        },
        {
          "command": "sweetpad.tools.documentation",
          "when": "view == sweetpad.tools.view",
          "group": "inline@1"
        },
        {
          "command": "sweetpad.tools.install",
          "when": "view == sweetpad.tools.view && viewItem == notInstalled",
          "group": "inline@2"
        }
      ],
      "testing/item/context": [
        {
          "command": "sweetpad.testing.selectTarget",
          "group": "context@1"
        },
        {
          "command": "sweetpad.testing.buildForTesting",
          "group": "context@2"
        },
        {
          "command": "sweetpad.testing.testWithoutBuilding",
          "group": "inline@3"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "SweetPad",
      "properties": {
        "sweetpad.format.path": {
          "type": "string",
          "examples": [
            "swift-format"
          ],
          "description": "Command or path to formatter executable."
        },
        "sweetpad.format.args": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          },
          "default": null,
          "examples": [
            [
              "--parallel",
              "--in-place",
              "${file}"
            ]
          ],
          "description": "Command or path to formatter executable. Use ${file} as a placeholder for the file path. Placeholder ${file} is supported only as a separate item in the array."
        },
        "sweetpad.build.xcbeautifyEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable xcbeautify for build logs."
        },
        "sweetpad.build.xcodeWorkspacePath": {
          "type": "string",
          "default": null,
          "required": false,
          "description": "Path to Xcode workspace. Can be absolute or relative to the workspace root."
        },
        "sweetpad.build.derivedDataPath": {
          "type": "string",
          "default": null,
          "required": false,
          "description": "Path to derived data directory. Can be absolute or relative to the workspace root."
        },
        "sweetpad.build.arch": {
          "type": "string",
          "enum": [
            "x86_64",
            "arm64"
          ],
          "description": "Architecture to build for. Can be usefull for building x86_64 simulator builds on M1 Macs. Usually, you don't need to change this setting."
        },
        "sweetpad.build.configuration": {
          "type": "string",
          "default": null,
          "description": "Configuration to build."
        },
        "sweetpad.build.allowProvisioningUpdates": {
          "type": "boolean",
          "default": true,
          "description": "Allow Xcode to update provisioning profiles."
        },
        "sweetpad.build.args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "examples": [
            [
              "-skipMacroValidation",
              "-disablePackageRepositoryCache"
            ]
          ],
          "description": "Additional arguments to pass to the build command. You can also override the default arguments"
        },
        "sweetpad.build.env": {
          "type": "object",
          "default": {},
          "examples": [
            {
              "MY_ENV": "value",
              "MY_ENV_2": null
            }
          ],
          "description": "Environment variables to pass to the xcodebuild command"
        },
        "sweetpad.build.launchArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "examples": [
            [
              "--my-arg",
              "value"
            ]
          ],
          "description": "Arguments to pass to the app on launch"
        },
        "sweetpad.build.launchEnv": {
          "type": "object",
          "default": {},
          "examples": [
            {
              "MY_ENV": "value",
              "MY_ENV_2": "value2"
            }
          ],
          "description": "Environment variables to pass to the app on launch"
        },
        "sweetpad.testing.configuration": {
          "type": "string",
          "default": null,
          "description": "Configuration to build for testing."
        },
        "sweetpad.system.taskExecutor": {
          "type": "string",
          "default": "v2",
          "enum": [
            "v1",
            "v2"
          ],
          "enumDescriptions": [
            "Legacy executor, use this if you have issues with the new executor.",
            "New executor, use this for better performance and better error handling."
          ],
          "description": "Use version task executor for build tasks."
        },
        "sweetpad.system.logLevel": {
          "type": "string",
          "default": "info",
          "enum": [
            "debug",
            "info",
            "warn",
            "error"
          ],
          "description": "Log level for SweetPad."
        },
        "sweetpad.system.enableSentry": {
          "type": "boolean",
          "default": false,
          "description": "Enable Sentry error reporting. NOTE: This config is disable by default, I recommend enabling it when you have issues with SweetPad and want to report about them."
        },
        "sweetpad.xcodegen.autogenerate": {
          "type": "boolean",
          "default": false,
          "description": "Watch for new .swift files and regenerate the project using XcodeGen. Restart VSCode to apply the settings."
        },
        "sweetpad.tuist.autogenerate": {
          "type": "boolean",
          "default": false,
          "description": "Watch for new .swift files and regenerate the project using Tuist. Restart VSCode to apply the settings."
        },
        "sweetpad.tuist.generate.env": {
          "type": "object",
          "default": {},
          "description": "Environment variables to pass to the Tuist generate command — https://docs.tuist.dev/en/guides/develop/projects/dynamic-configuration",
          "examples": [
            {
              "TUIST_APP_NAME": "Diia",
              "TUIST_TARGET_COUNTRY": "Ukraine"
            }
          ]
        },
        "sweetpad.xcodebuildserver.autogenerate": {
          "type": "boolean",
          "default": true,
          "description": "Watch if default scheme is changed and regenerate the build server config"
        }
      }
    },
    "icons": {
      "sweetpad-square-letter-w": {
        "description": "Square Letter W",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f491"
        }
      },
      "sweetpad-square-letter-i": {
        "description": "Square Letter I",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f484"
        }
      },
      "sweetpad-square-letter-m": {
        "description": "Square Letter M",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f488"
        }
      },
      "sweetpad-square-letter-v": {
        "description": "Square Letter V",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f4bb"
        }
      },
      "sweetpad-square-letter-t": {
        "description": "Square Letter T",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f48f"
        }
      },
      "sweetpad-circle-letter-w": {
        "description": "Circle Letter W",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f456"
        }
      },
      "sweetpad-circle-letter-i": {
        "description": "Circle Letter I",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f449"
        }
      },
      "sweetpad-circle-letter-m": {
        "description": "Circle Letter M",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f44d"
        }
      },
      "sweetpad-circle-letter-v": {
        "description": "Circle Letter V",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f4ad"
        }
      },
      "sweetpad-circle-letter-t": {
        "description": "Circle Letter T",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f454"
        }
      },
      "sweetpad-square-asterisk": {
        "description": "Square Asterisk",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f01a"
        }
      },
      "sweetpad-device-laptop": {
        "description": "Device Laptop",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\eb64"
        }
      },
      "sweetpad-device-mobile": {
        "description": "Device Mobile",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\ea8a"
        }
      },
      "sweetpad-device-watch": {
        "description": "Device Watch",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\ebf9"
        }
      },
      "sweetpad-device-tv-old": {
        "description": "Device TV Old",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f1d3"
        }
      },
      "sweetpad-device-watch-pause": {
        "description": "Device Watch Pause",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f8dd"
        }
      },
      "sweetpad-device-mobile-check": {
        "description": "Device Mobile Check",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f8af"
        }
      },
      "sweetpad-device-mobile-question": {
        "description": "Device Mobile Question",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f8ba"
        }
      },
      "sweetpad-device-ipad": {
        "description": "Device iPad",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f648"
        }
      },
      "sweetpad-device-mobile-pause": {
        "description": "Device Mobile Pause",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f8b7"
        }
      },
      "sweetpad-device-mobile-x": {
        "description": "Device Mobile X",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f8bf"
        }
      },
      "sweetpad-device-ipad-x": {
        "description": "Device iPad X",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f8ac"
        }
      },
      "sweetpad-cardboards": {
        "description": "Cardboards",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\ed74"
        }
      },
      "sweetpad-tools": {
        "description": "Tools",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\ebca"
        }
      },
      "sweetpad-tool": {
        "description": "Tool",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\eb40"
        }
      },
      "sweetpad-trash-x": {
        "description": "Trash X",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\ef88"
        }
      },
      "sweetpad-refresh": {
        "description": "Refresh",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\eb13"
        }
      },
      "sweetpad-player-play": {
        "description": "Player Play",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\ed46"
        }
      },
      "sweetpad-device-mobile-heart": {
        "description": "Device Mobile Heart",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f8b5"
        }
      },
      "sweetpad-package": {
        "description": "Package",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\eaff"
        }
      },
      "sweetpad-check": {
        "description": "Check",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\ea5e"
        }
      },
      "sweetpad-pin": {
        "description": "Select",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\ec9c"
        }
      },
      "sweetpad-x": {
        "description": "X",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\eb55"
        }
      },
      "sweetpad-book": {
        "description": "Boook",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\ea39"
        }
      },
      "sweetpad-terminal-2": {
        "description": "Terminal 2",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\ebef"
        }
      },
      "sweetpad-help-hexagon": {
        "description": "Help Hexagon",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f7a8"
        }
      },
      "sweetpad-hexagons": {
        "description": "Hexagons",
        "default": {
          "fontPath": "images/icons/tabler-icons.woff",
          "fontCharacter": "\\f09d"
        }
      }
    },
    "colors": [
      {
        "id": "sweetpad.scheme",
        "description": "Scheme",
        "defaults": {
          "dark": "#ff3755",
          "light": "#ff0026"
        }
      },
      {
        "id": "sweetpad.simulator.booted",
        "description": "Scheme",
        "defaults": {
          "dark": "#00bb22",
          "light": "#007315"
        }
      }
    ]
  },
  "extensionDependencies": [
    "vadimcn.vscode-lldb"
  ],
  "scripts": {
    "build": "node esbuild.config.mjs --sourcemap",
    "watch": "node esbuild.config.mjs --sourcemap --watch",
    "vscode:prepublish": "node esbuild.config.mjs --minify --sourcemap --production",
    "test": "vscode-test",
    "jest": "jest",
    "check:format:code": "biome format --write",
    "check:format:markdown": "prettier --write docs/**/*.md",
    "check:lint": "biome check --fix --unsafe",
    "check:types": "tsc --noEmit",
    "check:all": "npm run check:format:code && npm run check:lint && npm run check:types",
    "publish-patch": "./scripts/publish-patch.sh",
    "find-deadcode": "ts-prune --error --skip spec.ts?",
    "download-examples": "tsx ./scripts/download-examples.ts"
  },
  "devDependencies": {
    "@biomejs/biome": "1.9.3",
    "@sentry/esbuild-plugin": "^2.22.5",
    "@types/jest": "^29.5.13",
    "@types/mocha": "^10.0.9",
    "@types/node": "22.x",
    "@types/shell-quote": "^1.7.5",
    "@types/vscode": "^1.85.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "dotenv": "^16.4.5",
    "esbuild": "^0.24.0",
    "esbuild-plugin-env": "^1.1.1",
    "globals": "^15.11.0",
    "jest": "^29.7.0",
    "prettier": "3.3.3",
    "ts-jest": "^29.2.5",
    "ts-prune": "^0.10.3",
    "tsx": "^4.19.1",
    "typescript": "^5.6.3"
  },
  "dependencies": {
    "@bacons/xcode": "^1.0.0-alpha.15",
    "@rgrove/parse-xml": "^4.1.0",
    "@sentry/node": "^8.34.0",
    "add": "^2.0.6",
    "execa": "npm:@esm2cjs/execa@^6.1.1-cjs.1",
    "shell-quote": "^1.8.1",
    "vscode-languageclient": "^9.0.1"
  }
}
